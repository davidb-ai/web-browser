# GitHub Actions Environment Variables Example
# Copy this file to your GitHub repository settings as secrets
# Navigate to: Settings > Secrets and variables > Actions > New repository secret

# ===================================
# macOS Code Signing & Notarization
# ===================================

# Certificate name in macOS Keychain for code signing
# Example: "Developer ID Application: Your Company Name (TEAMID123)"
MACOS_CERTIFICATE_NAME="Developer ID Application: Your Company Name (TEAMID123)"

# macOS signing certificate in base64 format (for CI/CD)
# Export from Keychain: security export -t certs -f pkcs12 -P password -o cert.p12
# Convert to base64: base64 -i cert.p12 -o cert.txt
MACOS_CERTIFICATE_BASE64="<base64-encoded-p12-certificate>"

# Password for the macOS certificate
MACOS_CERTIFICATE_PASSWORD="your-certificate-password"

# Apple ID email for notarization
# This should be an Apple ID with app-specific password enabled
PROD_MACOS_NOTARIZATION_APPLE_ID="your-apple-id@example.com"

# Apple Developer Team ID (found in Apple Developer account)
# Example: "TEAMID123"
PROD_MACOS_NOTARIZATION_TEAM_ID="TEAMID123"

# App-specific password for notarization
# Generate at: https://appleid.apple.com/account/manage
# Security > App-Specific Passwords > Generate Password
PROD_MACOS_NOTARIZATION_PWD="xxxx-xxxx-xxxx-xxxx"

# ===================================
# Windows Code Signing (Optional)
# ===================================

# Certificate name for Windows code signing
# If using certificate from Windows Certificate Store
WINDOWS_CERTIFICATE_NAME="Your Company Name"

# Or if using a PFX file (base64 encoded)
# Convert PFX to base64: base64 -i certificate.pfx -o certificate.txt
WINDOWS_CERTIFICATE_PFX_BASE64="<base64-encoded-pfx-content>"

# Password for the PFX certificate
WINDOWS_CERTIFICATE_PASSWORD="your-certificate-password"

# ===================================
# Google Cloud Storage (Optional)
# ===================================

# For uploading build artifacts to Google Cloud Storage
# Service account JSON key (base64 encoded)
# Convert JSON to base64: base64 -i service-account-key.json -o key.txt
GCS_SERVICE_ACCOUNT_KEY="<base64-encoded-service-account-json>"

# GCS bucket name for storing builds
GCS_BUCKET_NAME="browseros-builds"

# GCS project ID
GCS_PROJECT_ID="your-gcp-project-id"

# ===================================
# Slack Notifications (Optional)
# ===================================

# Slack webhook URL for build notifications
# Get from: https://api.slack.com/messaging/webhooks
SLACK_WEBHOOK_URL="https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX"

# Slack channel for notifications (without #)
SLACK_CHANNEL="build-notifications"

# ===================================
# GitHub Token (Usually automatic)
# ===================================

# GitHub automatically provides this in Actions
# Only set if you need elevated permissions
# GITHUB_TOKEN="ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"

# ===================================
# Build Configuration (Optional)
# ===================================

# Override default Python version
PYTHON_VERSION="3.12"

# Custom depot_tools repository (if using fork)
DEPOT_TOOLS_URL="https://chromium.googlesource.com/chromium/tools/depot_tools.git"

# Build parallelism (number of concurrent jobs)
# Default: number of CPU cores
BUILD_JOBS="8"

# ===================================
# Caching Configuration (Optional)
# ===================================

# Cache version - increment to bust all caches
CACHE_VERSION="1"

# Maximum cache size for ccache/sccache (default: 10G)
COMPILER_CACHE_SIZE="10G"

# ===================================
# Release Configuration (Optional)
# ===================================

# Auto-update server URL (for Sparkle on macOS)
SPARKLE_UPDATE_URL="https://updates.browseros.com"

# Code signing identity for updates
SPARKLE_SIGNING_KEY="<base64-encoded-private-key>"

# SSH key for update server deployment (optional)
UPDATE_SERVER_SSH_KEY="<base64-encoded-ssh-private-key>"

# ===================================
# Debug/Development (Optional)
# ===================================

# Enable verbose build output
VERBOSE_BUILD="false"

# Skip code signing in development builds
SKIP_CODE_SIGNING="false"

# Additional GN flags for debug builds
DEBUG_GN_FLAGS="enable_nacl=false"

# ===================================
# Notes:
# ===================================
# 1. Never commit this file with real values to version control
# 2. Use GitHub's secret scanning to detect accidental commits
# 3. Rotate credentials regularly
# 4. Use environment-specific prefixes (DEV_, PROD_) when needed
# 5. Some secrets are only required for release builds
# 6. Windows signing is optional if not distributing Windows builds
# 7. GCS integration is optional if using GitHub releases only